@using FacturaApp.Models.ViewModel
@model ProductoViewModel
@{
    ViewBag.Title = "New";
    List<SelectListItem> items = (List<SelectListItem>)ViewBag.items;
}

<h2>New</h2>


<h1 class="is-size-3 mt-2 ml-3">Nuevo Registro</h1>
<div class="box">
    <div class="columns">
        <div class="column is-two-fifths">
            <section class="section">
                <div class="container">
                    <form id="formProducto">
                        <div class="field">
                            @Html.LabelFor(d => d.Nombre, new { @class = "label" })
                            <div class="control">
                                @Html.TextBoxFor(d => d.Nombre, new { @class = "input", placeholder = "Gtx 1050 Ti", id = "txtNombre" })
                            </div>
                        </div>
                        <div class="field">
                            @Html.LabelFor(d => d.Descripcion, new { @class = "label" })
                            <div class="control">
                                @Html.TextBoxFor(d => d.Descripcion, new { @class = "input", placeholder = "GeForce GTX 1050 Ti GeForce GTX 1050 (2GB)", id = "txtDescripcion" })
                            </div>
                        </div>
                        <div class="field">
                            @Html.LabelFor(d => d.PrecioVenta, new { @class = "label" })
                            <div class="control">
                                @Html.TextBoxFor(d => d.PrecioVenta, new { type="number", @class = "input", placeholder = "100.00", id = "txtPrecio" })
                            </div>
                        </div>
                        <div class="field">
                            <div class="select">
                            @Html.DropDownList("Categoria", items, "Selecciona", new { id="idCategoria"})
                            </div>
                        </div>
                        
                        <button class="button is-primary mt-4" type="submit">Guardar</button>
                    </form>
                </div>
            </section>
        </div>
    </div>
</div>

<script>

    let txtNombre = document.getElementById("txtNombre");
    let txtDescripcion = document.getElementById("txtDescripcion");
    let txtPrecio = document.getElementById("txtPrecio");
    let idCategoria = document.getElementById("idCategoria")
    let formProducto = document.getElementById("formProducto");

    const URLPost = "@Url.Content("~/Producto/Save")"

    const agregarProducto = () => {

        fetch(URLPost, {
            method: "POST",
            body: JSON.stringify({
                Nombre: txtNombre.value,
                Descripcion: txtDescripcion.value,
                PrecioVenta: txtPrecio.value,
                CategoriaId: idCategoria.value
            }),
            headers: {
                "Accept": "application/json",
                "Content-Type": "application/json"
            }
        }).then((resp) => {
            if (resp.ok)
                resp.text();
            else
                alert("Algo anda mal")
        }).then((data) => {
            document.location.href = "@Url.Content("~/Producto")"
        }).catch((error) => {
            console.log(error)
        })
    }

    formProducto.addEventListener("submit", (e) => {
        e.preventDefault();
        agregarProducto();

    });

</script>
