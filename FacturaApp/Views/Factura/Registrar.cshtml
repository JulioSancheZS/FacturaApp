@using FacturaApp.Models.ViewModel
@model FacturaViewModel
@{
    ViewBag.Title = "Facturar";
}

<br />
<h2 class="is-size-4">Nueva Factura</h2>
<br />

@using (Html.BeginForm("Registrar", "Factura", FormMethod.Post, new { id = "form" }))
{
    <div class="box">
        <div class="columns">
            <div class="column">
                <style>      
                    /*Estilos para el autocompletado*/
                    .suggestions > div {
                        padding: 10px;
                        font-size: 15px;
                        background: #808080;
                        color: #fff;
                        border-top: 1px solid #666;
                        cursor: pointer;
                    }

                    .suggestions > div:hover {
                        background-color: #1e4dd4;
                    }

                    .emphy {
                        width: 50%;
                        margin: 40px auto;
                        text-align: center;
                        color: #fff;
                    }

                </style>

                <div class="field">
                    <label class="label">Buscar Cliente</label>
                    <div class="control">
                        <input 
                               class="input is-primary search-input" 
                               type="text" 
                               placeholder="Escribe para buscar">
                        <div class="suggestions">
                            <!--Aqui se pinta-->
                        </div>
                    </div>
                </div>
                @Html.HiddenFor(d => d.ClienteId, new { id= "idCliente" })
            </div>

            <div class="column">
                <div class="field">
                    <label class="label">Producto</label>
                    <div class="control">
                        <div class="select">
                            <select id="productoDropdown" name="productoDropdown">
                            </select>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <input class="input" type="hidden" id="id" placeholder="ID Producto" hidden>


        <div class="field">
            <label class="label">Producto</label>
            <div class="control">
                <input class="input" type="text" id="nombre" placeholder="Nombre Producto" disabled>

            </div>
        </div>

        <div class="field">
            <label class="label">Precio</label>
            <div class="control">
                <input class="input" type="text" id="precio" placeholder="Precio Producto" disabled>
            </div>
        </div>

        <div class="field">
            <label class="label">Cantidad</label>
            <div class="control">
                <input class="input" type="text" id="cantidad" placeholder="Cantidad">
            </div>
        </div>

        <br />
        <!--  Agregar detalles-->
        <input value="Agregar a la tabla"
               type="button"
               class="button is-link is-outlined"
               id="btnAgregar"
               onclick="AgregarConcepto();" return false;" />

    </div>

    <div id="divConceptos" class="table-container">
        <table id="tablaConcepto" class="table is-fullwidth">
            <tr>
                <th>Cantidad</th>
                <th>Producto</th>
                <th>PrecioUnitario</th>
                <th>Total</th>
            </tr>

        </table>
    </div>

    <div class="field">
        <input type="submit"
               value="Generar Venta"
               class="button is-primary" />
    </div>
   
}

<script>
    //Autocompletado Funcional (mas o menos)
    const searchInput = document.querySelector('.search-input');
    const suggestionsPanel = document.querySelector('.suggestions');
    let idCliente = document.getElementById('idCliente');

    traer = async () => {

        const URLGETCLIENTE = "@Url.Content("~/Factura/BuscarCliente")"

        const res = await fetch(URLGETCLIENTE);
        const clientes = await res.json();

        searchInput.addEventListener('keyup', function () {
            const input = searchInput.value;
            suggestionsPanel.innerHTML = '';
            const suggestions = clientes.filter(function (cliente) {
                //return country.name.toLowerCase().startsWith(input);
                const regex = new RegExp(`^${input}`, 'gi');
                //filtrar el valor de la matriz y los caracteres del usuario a minúsculas y devolver solo aquellas palabras que comienzan con caracteres ingresados ​​por el usuario
                // return data.toLocaleLowerCase().startsWith(userData.toLocaleLowerCase());
                // console.log(data);
                return cliente.NombreCompleto.match(regex);
            });
            //Recoremos el arreglo
            suggestions.forEach(function (suggested) {
                // const contenedor = document.createElement('div')
                const div = document.createElement('div');

                div.innerHTML = suggested.NombreCompleto;

                suggestionsPanel.appendChild(div);
                //Le decimos que cuando le de click al item del div, que lo ponga en el input
                //y luego removemos el div (aun no funciona como quiero)
                div.addEventListener('click', () => {
                    console.log(suggested.abbr);
                    idCliente.value = suggested.ClienteId;
                    searchInput.value = suggested.NombreCompleto;
                    suggestionsPanel.removeChild(div);
                });

            });
            if (input === '') {
                suggestionsPanel.innerHTML = '';
            }
        })
    }

    //Fin del autoCompletado
    traer(); //llamamos la funcion

    //----------------------------------------------------------------------------------------
    //----------------------------------------------------------------------------------------
    //Dropdown Producto
    const ListaProductos = () => {
       
        let productoDropdown = document.getElementById("productoDropdown");
        productoDropdown.length  = 0;
        let texto = document.createElement('option');
        texto.text = "Seleccionar";
        productoDropdown.add(texto);
        productoDropdown.selectedIndex = 0;

       //Input para agregar detalles
        let id = document.getElementById("id");
        let nombre = document.getElementById("nombre");
        let precio = document.getElementById("precio");

        const url = "@Url.Content("~/Factura/BuscarProducto")";


    fetch(url)
        .then(
            function (response) {
                if (response.status !== 200) {
                    console.warn('Hay un problema ' +
                        response.status);
                    return;
                }

                response.json().then(function (data) {
                    let option;

                    for (let i = 0; i < data.length; i++) {
                        option = document.createElement('option');
                        option.text = data[i].Nombre;
                        option.value = data[i].ProductoId;
                        option.title = data[i].PrecioVenta;
                        productoDropdown.add(option);
                    }
                });
            }
        )
        .catch(function (err) {
            console.error('Fetch Error -', err);
        });

    //Busqueda del value Producto del DropDownList
    productoDropdown.addEventListener('change', () => {

        var opt = productoDropdown.options[productoDropdown.selectedIndex];

        id.value = opt.value;
        nombre.value = opt.text;
        precio.value = opt.title;
        //console.log(opt.value);
        //console.log(opt.text);
        console.log("\n\n CHANGE, FUNCIONANDO \n\n")

       })
    }

    ListaProductos();

    //----------------------------------------------------------------------------------------
    //----------------------------------------------------------------------------------------

    //Funcionalidad para hacer la factura
    let num = 0; //Numero de indice que vamos
    //Agregar detalle
    const AgregarConcepto = () => {

        let id = document.getElementById("id").value;
        let nombre = document.getElementById("nombre").value;
        let precio = document.getElementById("precio").value;
        let cantidad = document.getElementById("cantidad").value;

        //Validación Sencilla
        if (productoDropdown.value === "Seleccionar") {
            alert("Elija el producto");
        }else
        if (cantidad === "") {
            alert("ingresa la cantidad")
        } else {

        console.log("Se a agregado al detalle: " + id)
        console.log("Se a agregado al detalle: " + nombre)
        console.log("Se a agregado al detalle: " + precio)

        let tablaConceptos = document.getElementById("tablaConcepto");

        //Creando Elementos html
        let tr = document.createElement("tr");
        let tdCantidad = document.createElement("td");
        let tdProducto = document.createElement("td");
        let tdPrecio = document.createElement("td");
        let tdTotal = document.createElement("td");

        tr.appendChild(tdCantidad);
        tr.appendChild(tdProducto);
        tr.appendChild(tdPrecio);
        tr.appendChild(tdTotal);

        tdCantidad.innerHTML = cantidad;
        tdProducto.innerHTML = nombre;
        tdPrecio.innerHTML = precio;
        tdTotal.innerHTML = parseFloat(cantidad) * parseFloat(precio);
        tablaConceptos.appendChild(tr);

        //Creando los hidden
        let divConceptos = document.getElementById("divConceptos");
        let HiddenIndex = document.createElement("input");
        let HiddenCantidad = document.createElement("input");
        let HiddenProducto = document.createElement("input");
        let HiddenPrecio = document.createElement("input");

        HiddenIndex.name = "DetalleFacturaViewModels.Index";
        HiddenIndex.value = num;
        HiddenIndex.type = "hidden";

        HiddenCantidad.name = "DetalleFacturaViewModels[" + num + "].Cantidad";
        HiddenCantidad.value = cantidad;
        HiddenCantidad.type = "hidden";

        HiddenProducto.name = "DetalleFacturaViewModels[" + num + "].ProductoId";
        HiddenProducto.value = id;
        HiddenProducto.type = "hidden";

        HiddenPrecio.name = "DetalleFacturaViewModels[" + num + "].Precio";
        HiddenPrecio.value = precio;
        HiddenPrecio.type = "hidden";

        //le agregamos los elementos Hidden en el divConceptos
        divConceptos.appendChild(HiddenIndex);
        divConceptos.appendChild(HiddenCantidad);
        divConceptos.appendChild(HiddenProducto);
        divConceptos.appendChild(HiddenPrecio);

        //Limpiamos los text para seguir agregando detalle a la factura
        document.getElementById("cantidad").value = "";
        document.getElementById("id").value = "";
        document.getElementById("precio").value = "";
        nombre = document.getElementById("nombre").value = "";

        num++;//aumenta los hidden
        }

    }

    //----------------------------------------------------------------------------------------
    //----------------------------------------------------------------------------------------

    //Validaciones, aun en proceso
    const Validaciones = () => {
        const id = document.getElementById("id")
        const nombre = document.getElementById("nombre")
        const precio = document.getElementById("precio")
        const cantidad = document.getElementById("cantidad")
        const form = document.getElementById("form");

        form.addEventListener('submit', (e) => {
            if (idCliente.value === '') {
                alert("Error, los campos estan vacios")
                e.preventDefault();
            } else {
                //e.stopPropagation();
                setTimeout(() => console.log("voy a la otra pagina"), 3000);
            }
        })
    }

    Validaciones();
</script>
